#!/usr/bin/env ruby

# Requirements
require "tty-prompt"
require "tty-spinner"
require "yaml"
require "date"

require_relative "../lib/config"
require_relative "../lib/report"
require_relative "../lib/statistics"
require_relative "../lib/xy"

ARGS={}
ARGV.each do |arg|
  case arg
    when '-h','--help', '-help', 'help' then ARGS[:help] = true
    when '-b','--banner','-banner','banner' then ARGS[:banner] = true
    else
      ARGS[:help] = true
      ARGS[:unknown] = true
    end
end

if ARGS[:help]
  if ARGS[:unknown]
    puts "Unrecognised options provided: #{ARGV}"
    puts
  end
  puts "Usage:"
  puts "   Run this command without arguments to get status information"
  puts
  puts "-b, --banner, banner     Return a banner-friendly output"
  puts "-h, --help, help         Show this help page"
  puts
  exit
end

#
# Status Reports
#
if ARGS[:banner]
  statuses = all_statuses('warning')
  puts statuses
  exit
else
  puts "Status Reports:"
  statuses = all_statuses
  if statuses.count > 0 
    puts statuses
  else
    puts "- No statuses to report"
  end
  puts
end

#
# Ratings
#
recent_ratings = all_ratings
recent_ratings_day = all_ratings(24)
recent_ratings_week = all_ratings((24*7))

puts "Ratings (Past Hour)"
puts XY.bar(recent_ratings)
puts
puts "Ratings (Past Day)"
puts XY.bar(recent_ratings_day)
puts
puts "Ratings (Past Week)"
puts XY.bar(recent_ratings_week)
puts

#
# Reports
#

recent_reports_hour = all_reports
puts "Issues Reported (Past Hour)"
recent_reports_hour_pretty = recent_reports_hour.map{|issue_id, count| [YAML.load_file("#{Config.issuesdir}/#{issue_id}/metadata.yaml")['title'], count]}.to_h
puts XY.bar(recent_reports_hour_pretty)
puts

recent_reports_day = all_reports(24)
puts "Issues Reported (Past Day)"
recent_reports_day_pretty = recent_reports_day.map{|issue_id, count| [YAML.load_file("#{Config.issuesdir}/#{issue_id}/metadata.yaml")['title'], count]}.to_h
puts XY.bar(recent_reports_day_pretty)
puts

recent_reports_week = all_reports((24*7))
puts "Issues Reported (Past Week)"
recent_reports_week_pretty = recent_reports_week.map{|issue_id, count| [YAML.load_file("#{Config.issuesdir}/#{issue_id}/metadata.yaml")['title'], count]}.to_h
puts XY.bar(recent_reports_week_pretty)
puts
